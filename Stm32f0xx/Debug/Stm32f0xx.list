
Stm32f0xx.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000000c0  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00000740  080000c0  080000c0  000100c0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  08000800  08000808  00010808  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  08000800  08000800  00010808  2**0
                  CONTENTS
  4 .ARM          00000000  08000800  08000800  00010808  2**0
                  CONTENTS
  5 .preinit_array 00000000  08000800  08000808  00010808  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08000800  08000800  00010800  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08000804  08000804  00010804  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000000  20000000  20000000  00010808  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000001c  20000000  08000808  00020000  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  2000001c  08000808  0002001c  2**0
                  ALLOC
 11 .ARM.attributes 00000028  00000000  00000000  00010808  2**0
                  CONTENTS, READONLY
 12 .comment      00000043  00000000  00000000  00010830  2**0
                  CONTENTS, READONLY
 13 .debug_info   00000922  00000000  00000000  00010873  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 000002c8  00000000  00000000  00011195  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 000000c8  00000000  00000000  00011460  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_rnglists 0000008b  00000000  00000000  00011528  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  0000161b  00000000  00000000  000115b3  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   00000e47  00000000  00000000  00012bce  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    00005069  00000000  00000000  00013a15  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_frame  0000020c  00000000  00000000  00018a80  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 00000060  00000000  00000000  00018c8c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080000c0 <__do_global_dtors_aux>:
 80000c0:	b510      	push	{r4, lr}
 80000c2:	4c06      	ldr	r4, [pc, #24]	; (80000dc <__do_global_dtors_aux+0x1c>)
 80000c4:	7823      	ldrb	r3, [r4, #0]
 80000c6:	2b00      	cmp	r3, #0
 80000c8:	d107      	bne.n	80000da <__do_global_dtors_aux+0x1a>
 80000ca:	4b05      	ldr	r3, [pc, #20]	; (80000e0 <__do_global_dtors_aux+0x20>)
 80000cc:	2b00      	cmp	r3, #0
 80000ce:	d002      	beq.n	80000d6 <__do_global_dtors_aux+0x16>
 80000d0:	4804      	ldr	r0, [pc, #16]	; (80000e4 <__do_global_dtors_aux+0x24>)
 80000d2:	e000      	b.n	80000d6 <__do_global_dtors_aux+0x16>
 80000d4:	bf00      	nop
 80000d6:	2301      	movs	r3, #1
 80000d8:	7023      	strb	r3, [r4, #0]
 80000da:	bd10      	pop	{r4, pc}
 80000dc:	20000000 	.word	0x20000000
 80000e0:	00000000 	.word	0x00000000
 80000e4:	080007e8 	.word	0x080007e8

080000e8 <frame_dummy>:
 80000e8:	4b04      	ldr	r3, [pc, #16]	; (80000fc <frame_dummy+0x14>)
 80000ea:	b510      	push	{r4, lr}
 80000ec:	2b00      	cmp	r3, #0
 80000ee:	d003      	beq.n	80000f8 <frame_dummy+0x10>
 80000f0:	4903      	ldr	r1, [pc, #12]	; (8000100 <frame_dummy+0x18>)
 80000f2:	4804      	ldr	r0, [pc, #16]	; (8000104 <frame_dummy+0x1c>)
 80000f4:	e000      	b.n	80000f8 <frame_dummy+0x10>
 80000f6:	bf00      	nop
 80000f8:	bd10      	pop	{r4, pc}
 80000fa:	46c0      	nop			; (mov r8, r8)
 80000fc:	00000000 	.word	0x00000000
 8000100:	20000004 	.word	0x20000004
 8000104:	080007e8 	.word	0x080007e8

08000108 <GPIO_periperalclockControl>:

 */

/* Peripheral Clock Setup*/
void GPIO_periperalclockControl(GPIO_REGDEF_t *pGPIOx,uint8_t EnorDi)
{
 8000108:	b580      	push	{r7, lr}
 800010a:	b082      	sub	sp, #8
 800010c:	af00      	add	r7, sp, #0
 800010e:	6078      	str	r0, [r7, #4]
 8000110:	000a      	movs	r2, r1
 8000112:	1cfb      	adds	r3, r7, #3
 8000114:	701a      	strb	r2, [r3, #0]
	if(EnorDi == ENABLE)
 8000116:	1cfb      	adds	r3, r7, #3
 8000118:	781b      	ldrb	r3, [r3, #0]
 800011a:	2b01      	cmp	r3, #1
 800011c:	d148      	bne.n	80001b0 <GPIO_periperalclockControl+0xa8>
	{

		if(pGPIOx == GPIOA){
 800011e:	687a      	ldr	r2, [r7, #4]
 8000120:	2390      	movs	r3, #144	; 0x90
 8000122:	05db      	lsls	r3, r3, #23
 8000124:	429a      	cmp	r2, r3
 8000126:	d107      	bne.n	8000138 <GPIO_periperalclockControl+0x30>
			GPIOA_PCLK_EN();
 8000128:	4b38      	ldr	r3, [pc, #224]	; (800020c <GPIO_periperalclockControl+0x104>)
 800012a:	695a      	ldr	r2, [r3, #20]
 800012c:	4b37      	ldr	r3, [pc, #220]	; (800020c <GPIO_periperalclockControl+0x104>)
 800012e:	2180      	movs	r1, #128	; 0x80
 8000130:	0289      	lsls	r1, r1, #10
 8000132:	430a      	orrs	r2, r1
 8000134:	615a      	str	r2, [r3, #20]
		}
		else if(pGPIOx == GPIOF){
			GPIOF_PCLK_DI();
		}
	}
}
 8000136:	e065      	b.n	8000204 <GPIO_periperalclockControl+0xfc>
		else if(pGPIOx == GPIOB){
 8000138:	687b      	ldr	r3, [r7, #4]
 800013a:	4a35      	ldr	r2, [pc, #212]	; (8000210 <GPIO_periperalclockControl+0x108>)
 800013c:	4293      	cmp	r3, r2
 800013e:	d107      	bne.n	8000150 <GPIO_periperalclockControl+0x48>
			GPIOB_PCLK_EN();
 8000140:	4b32      	ldr	r3, [pc, #200]	; (800020c <GPIO_periperalclockControl+0x104>)
 8000142:	695a      	ldr	r2, [r3, #20]
 8000144:	4b31      	ldr	r3, [pc, #196]	; (800020c <GPIO_periperalclockControl+0x104>)
 8000146:	2180      	movs	r1, #128	; 0x80
 8000148:	02c9      	lsls	r1, r1, #11
 800014a:	430a      	orrs	r2, r1
 800014c:	615a      	str	r2, [r3, #20]
}
 800014e:	e059      	b.n	8000204 <GPIO_periperalclockControl+0xfc>
		else if(pGPIOx == GPIOC){
 8000150:	687b      	ldr	r3, [r7, #4]
 8000152:	4a30      	ldr	r2, [pc, #192]	; (8000214 <GPIO_periperalclockControl+0x10c>)
 8000154:	4293      	cmp	r3, r2
 8000156:	d107      	bne.n	8000168 <GPIO_periperalclockControl+0x60>
			GPIOC_PCLK_EN();
 8000158:	4b2c      	ldr	r3, [pc, #176]	; (800020c <GPIO_periperalclockControl+0x104>)
 800015a:	695a      	ldr	r2, [r3, #20]
 800015c:	4b2b      	ldr	r3, [pc, #172]	; (800020c <GPIO_periperalclockControl+0x104>)
 800015e:	2180      	movs	r1, #128	; 0x80
 8000160:	0309      	lsls	r1, r1, #12
 8000162:	430a      	orrs	r2, r1
 8000164:	615a      	str	r2, [r3, #20]
}
 8000166:	e04d      	b.n	8000204 <GPIO_periperalclockControl+0xfc>
		else if(pGPIOx == GPIOD){
 8000168:	687b      	ldr	r3, [r7, #4]
 800016a:	4a2b      	ldr	r2, [pc, #172]	; (8000218 <GPIO_periperalclockControl+0x110>)
 800016c:	4293      	cmp	r3, r2
 800016e:	d107      	bne.n	8000180 <GPIO_periperalclockControl+0x78>
			GPIOD_PCLK_EN();
 8000170:	4b26      	ldr	r3, [pc, #152]	; (800020c <GPIO_periperalclockControl+0x104>)
 8000172:	695a      	ldr	r2, [r3, #20]
 8000174:	4b25      	ldr	r3, [pc, #148]	; (800020c <GPIO_periperalclockControl+0x104>)
 8000176:	2180      	movs	r1, #128	; 0x80
 8000178:	0349      	lsls	r1, r1, #13
 800017a:	430a      	orrs	r2, r1
 800017c:	615a      	str	r2, [r3, #20]
}
 800017e:	e041      	b.n	8000204 <GPIO_periperalclockControl+0xfc>
		else if(pGPIOx == GPIOE){
 8000180:	687b      	ldr	r3, [r7, #4]
 8000182:	4a26      	ldr	r2, [pc, #152]	; (800021c <GPIO_periperalclockControl+0x114>)
 8000184:	4293      	cmp	r3, r2
 8000186:	d107      	bne.n	8000198 <GPIO_periperalclockControl+0x90>
			GPIOE_PCLK_EN();
 8000188:	4b20      	ldr	r3, [pc, #128]	; (800020c <GPIO_periperalclockControl+0x104>)
 800018a:	695a      	ldr	r2, [r3, #20]
 800018c:	4b1f      	ldr	r3, [pc, #124]	; (800020c <GPIO_periperalclockControl+0x104>)
 800018e:	2180      	movs	r1, #128	; 0x80
 8000190:	0389      	lsls	r1, r1, #14
 8000192:	430a      	orrs	r2, r1
 8000194:	615a      	str	r2, [r3, #20]
}
 8000196:	e035      	b.n	8000204 <GPIO_periperalclockControl+0xfc>
		else if(pGPIOx == GPIOF){
 8000198:	687b      	ldr	r3, [r7, #4]
 800019a:	4a21      	ldr	r2, [pc, #132]	; (8000220 <GPIO_periperalclockControl+0x118>)
 800019c:	4293      	cmp	r3, r2
 800019e:	d131      	bne.n	8000204 <GPIO_periperalclockControl+0xfc>
			GPIOF_PCLK_EN();
 80001a0:	4b1a      	ldr	r3, [pc, #104]	; (800020c <GPIO_periperalclockControl+0x104>)
 80001a2:	695a      	ldr	r2, [r3, #20]
 80001a4:	4b19      	ldr	r3, [pc, #100]	; (800020c <GPIO_periperalclockControl+0x104>)
 80001a6:	2180      	movs	r1, #128	; 0x80
 80001a8:	03c9      	lsls	r1, r1, #15
 80001aa:	430a      	orrs	r2, r1
 80001ac:	615a      	str	r2, [r3, #20]
}
 80001ae:	e029      	b.n	8000204 <GPIO_periperalclockControl+0xfc>
		if(pGPIOx == GPIOA){
 80001b0:	687a      	ldr	r2, [r7, #4]
 80001b2:	2390      	movs	r3, #144	; 0x90
 80001b4:	05db      	lsls	r3, r3, #23
 80001b6:	429a      	cmp	r2, r3
 80001b8:	d102      	bne.n	80001c0 <GPIO_periperalclockControl+0xb8>
			GPIOA_PCLK_DI();
 80001ba:	4b14      	ldr	r3, [pc, #80]	; (800020c <GPIO_periperalclockControl+0x104>)
 80001bc:	6a9b      	ldr	r3, [r3, #40]	; 0x28
}
 80001be:	e021      	b.n	8000204 <GPIO_periperalclockControl+0xfc>
		else if(pGPIOx == GPIOB){
 80001c0:	687b      	ldr	r3, [r7, #4]
 80001c2:	4a13      	ldr	r2, [pc, #76]	; (8000210 <GPIO_periperalclockControl+0x108>)
 80001c4:	4293      	cmp	r3, r2
 80001c6:	d102      	bne.n	80001ce <GPIO_periperalclockControl+0xc6>
			GPIOB_PCLK_DI();
 80001c8:	4b10      	ldr	r3, [pc, #64]	; (800020c <GPIO_periperalclockControl+0x104>)
 80001ca:	6a9b      	ldr	r3, [r3, #40]	; 0x28
}
 80001cc:	e01a      	b.n	8000204 <GPIO_periperalclockControl+0xfc>
		else if(pGPIOx == GPIOC){
 80001ce:	687b      	ldr	r3, [r7, #4]
 80001d0:	4a10      	ldr	r2, [pc, #64]	; (8000214 <GPIO_periperalclockControl+0x10c>)
 80001d2:	4293      	cmp	r3, r2
 80001d4:	d102      	bne.n	80001dc <GPIO_periperalclockControl+0xd4>
			GPIOC_PCLK_DI();
 80001d6:	4b0d      	ldr	r3, [pc, #52]	; (800020c <GPIO_periperalclockControl+0x104>)
 80001d8:	6a9b      	ldr	r3, [r3, #40]	; 0x28
}
 80001da:	e013      	b.n	8000204 <GPIO_periperalclockControl+0xfc>
		else if(pGPIOx == GPIOD){
 80001dc:	687b      	ldr	r3, [r7, #4]
 80001de:	4a0e      	ldr	r2, [pc, #56]	; (8000218 <GPIO_periperalclockControl+0x110>)
 80001e0:	4293      	cmp	r3, r2
 80001e2:	d102      	bne.n	80001ea <GPIO_periperalclockControl+0xe2>
			GPIOD_PCLK_DI();
 80001e4:	4b09      	ldr	r3, [pc, #36]	; (800020c <GPIO_periperalclockControl+0x104>)
 80001e6:	6a9b      	ldr	r3, [r3, #40]	; 0x28
}
 80001e8:	e00c      	b.n	8000204 <GPIO_periperalclockControl+0xfc>
		else if(pGPIOx == GPIOE){
 80001ea:	687b      	ldr	r3, [r7, #4]
 80001ec:	4a0b      	ldr	r2, [pc, #44]	; (800021c <GPIO_periperalclockControl+0x114>)
 80001ee:	4293      	cmp	r3, r2
 80001f0:	d102      	bne.n	80001f8 <GPIO_periperalclockControl+0xf0>
			GPIOE_PCLK_DI();
 80001f2:	4b06      	ldr	r3, [pc, #24]	; (800020c <GPIO_periperalclockControl+0x104>)
 80001f4:	6a9b      	ldr	r3, [r3, #40]	; 0x28
}
 80001f6:	e005      	b.n	8000204 <GPIO_periperalclockControl+0xfc>
		else if(pGPIOx == GPIOF){
 80001f8:	687b      	ldr	r3, [r7, #4]
 80001fa:	4a09      	ldr	r2, [pc, #36]	; (8000220 <GPIO_periperalclockControl+0x118>)
 80001fc:	4293      	cmp	r3, r2
 80001fe:	d101      	bne.n	8000204 <GPIO_periperalclockControl+0xfc>
			GPIOF_PCLK_DI();
 8000200:	4b02      	ldr	r3, [pc, #8]	; (800020c <GPIO_periperalclockControl+0x104>)
 8000202:	6a9b      	ldr	r3, [r3, #40]	; 0x28
}
 8000204:	46c0      	nop			; (mov r8, r8)
 8000206:	46bd      	mov	sp, r7
 8000208:	b002      	add	sp, #8
 800020a:	bd80      	pop	{r7, pc}
 800020c:	40021000 	.word	0x40021000
 8000210:	48000400 	.word	0x48000400
 8000214:	48000800 	.word	0x48000800
 8000218:	48000c00 	.word	0x48000c00
 800021c:	48001000 	.word	0x48001000
 8000220:	48001400 	.word	0x48001400

08000224 <GPIO_Inıt>:
 *
 * @Note              -

 */
void GPIO_Inıt(GPIO_Handle_t *pGPIOHandle)
{
 8000224:	b5b0      	push	{r4, r5, r7, lr}
 8000226:	b086      	sub	sp, #24
 8000228:	af00      	add	r7, sp, #0
 800022a:	6078      	str	r0, [r7, #4]
	uint32_t temp = 0;	//temp. register
 800022c:	2300      	movs	r3, #0
 800022e:	617b      	str	r3, [r7, #20]

	GPIO_periperalclockControl(pGPIOHandle -> pGPIOx, ENABLE);
 8000230:	687b      	ldr	r3, [r7, #4]
 8000232:	681b      	ldr	r3, [r3, #0]
 8000234:	2101      	movs	r1, #1
 8000236:	0018      	movs	r0, r3
 8000238:	f7ff ff66 	bl	8000108 <GPIO_periperalclockControl>

		//Configure mode of pin

	if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode <= GPIO_Mode_ANALOG ){
 800023c:	687b      	ldr	r3, [r7, #4]
 800023e:	795b      	ldrb	r3, [r3, #5]
 8000240:	2b03      	cmp	r3, #3
 8000242:	d820      	bhi.n	8000286 <GPIO_Inıt+0x62>

		//non interrup mode

		temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinMode << (2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNummer));
 8000244:	687b      	ldr	r3, [r7, #4]
 8000246:	795b      	ldrb	r3, [r3, #5]
 8000248:	001a      	movs	r2, r3
 800024a:	687b      	ldr	r3, [r7, #4]
 800024c:	791b      	ldrb	r3, [r3, #4]
 800024e:	005b      	lsls	r3, r3, #1
 8000250:	409a      	lsls	r2, r3
 8000252:	0013      	movs	r3, r2
 8000254:	617b      	str	r3, [r7, #20]
		pGPIOHandle->pGPIOx->MODER &= ~( 0x3 << ( 2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNummer));
 8000256:	687b      	ldr	r3, [r7, #4]
 8000258:	681b      	ldr	r3, [r3, #0]
 800025a:	681a      	ldr	r2, [r3, #0]
 800025c:	687b      	ldr	r3, [r7, #4]
 800025e:	791b      	ldrb	r3, [r3, #4]
 8000260:	005b      	lsls	r3, r3, #1
 8000262:	2103      	movs	r1, #3
 8000264:	4099      	lsls	r1, r3
 8000266:	000b      	movs	r3, r1
 8000268:	43db      	mvns	r3, r3
 800026a:	0019      	movs	r1, r3
 800026c:	687b      	ldr	r3, [r7, #4]
 800026e:	681b      	ldr	r3, [r3, #0]
 8000270:	400a      	ands	r2, r1
 8000272:	601a      	str	r2, [r3, #0]
		pGPIOHandle->pGPIOx->MODER |= temp ;
 8000274:	687b      	ldr	r3, [r7, #4]
 8000276:	681b      	ldr	r3, [r3, #0]
 8000278:	6819      	ldr	r1, [r3, #0]
 800027a:	687b      	ldr	r3, [r7, #4]
 800027c:	681b      	ldr	r3, [r3, #0]
 800027e:	697a      	ldr	r2, [r7, #20]
 8000280:	430a      	orrs	r2, r1
 8000282:	601a      	str	r2, [r3, #0]
 8000284:	e0b5      	b.n	80003f2 <GPIO_Inıt+0x1ce>

	}
	else {//interrup mode

			if (pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_Mode_IT_FT)
 8000286:	687b      	ldr	r3, [r7, #4]
 8000288:	795b      	ldrb	r3, [r3, #5]
 800028a:	2b04      	cmp	r3, #4
 800028c:	d117      	bne.n	80002be <GPIO_Inıt+0x9a>

			{//Fallig edge

				//set FTSR
				EXTI->FTSR |= (1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNummer);
 800028e:	4bae      	ldr	r3, [pc, #696]	; (8000548 <GPIO_Inıt+0x324>)
 8000290:	68da      	ldr	r2, [r3, #12]
 8000292:	687b      	ldr	r3, [r7, #4]
 8000294:	791b      	ldrb	r3, [r3, #4]
 8000296:	0019      	movs	r1, r3
 8000298:	2301      	movs	r3, #1
 800029a:	408b      	lsls	r3, r1
 800029c:	0019      	movs	r1, r3
 800029e:	4baa      	ldr	r3, [pc, #680]	; (8000548 <GPIO_Inıt+0x324>)
 80002a0:	430a      	orrs	r2, r1
 80002a2:	60da      	str	r2, [r3, #12]
				//RESET RTSR
				EXTI->RTSR &= ~(1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNummer);
 80002a4:	4ba8      	ldr	r3, [pc, #672]	; (8000548 <GPIO_Inıt+0x324>)
 80002a6:	689a      	ldr	r2, [r3, #8]
 80002a8:	687b      	ldr	r3, [r7, #4]
 80002aa:	791b      	ldrb	r3, [r3, #4]
 80002ac:	0019      	movs	r1, r3
 80002ae:	2301      	movs	r3, #1
 80002b0:	408b      	lsls	r3, r1
 80002b2:	43db      	mvns	r3, r3
 80002b4:	0019      	movs	r1, r3
 80002b6:	4ba4      	ldr	r3, [pc, #656]	; (8000548 <GPIO_Inıt+0x324>)
 80002b8:	400a      	ands	r2, r1
 80002ba:	609a      	str	r2, [r3, #8]
 80002bc:	e035      	b.n	800032a <GPIO_Inıt+0x106>
			}
			else if (pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_Mode_IT_RT	)
 80002be:	687b      	ldr	r3, [r7, #4]
 80002c0:	795b      	ldrb	r3, [r3, #5]
 80002c2:	2b05      	cmp	r3, #5
 80002c4:	d117      	bne.n	80002f6 <GPIO_Inıt+0xd2>
			{//Rising edge

				//set FTSR
				EXTI->RTSR |= (1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNummer);
 80002c6:	4ba0      	ldr	r3, [pc, #640]	; (8000548 <GPIO_Inıt+0x324>)
 80002c8:	689a      	ldr	r2, [r3, #8]
 80002ca:	687b      	ldr	r3, [r7, #4]
 80002cc:	791b      	ldrb	r3, [r3, #4]
 80002ce:	0019      	movs	r1, r3
 80002d0:	2301      	movs	r3, #1
 80002d2:	408b      	lsls	r3, r1
 80002d4:	0019      	movs	r1, r3
 80002d6:	4b9c      	ldr	r3, [pc, #624]	; (8000548 <GPIO_Inıt+0x324>)
 80002d8:	430a      	orrs	r2, r1
 80002da:	609a      	str	r2, [r3, #8]
				//RESET RTSR
				EXTI->FTSR &= ~(1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNummer);
 80002dc:	4b9a      	ldr	r3, [pc, #616]	; (8000548 <GPIO_Inıt+0x324>)
 80002de:	68da      	ldr	r2, [r3, #12]
 80002e0:	687b      	ldr	r3, [r7, #4]
 80002e2:	791b      	ldrb	r3, [r3, #4]
 80002e4:	0019      	movs	r1, r3
 80002e6:	2301      	movs	r3, #1
 80002e8:	408b      	lsls	r3, r1
 80002ea:	43db      	mvns	r3, r3
 80002ec:	0019      	movs	r1, r3
 80002ee:	4b96      	ldr	r3, [pc, #600]	; (8000548 <GPIO_Inıt+0x324>)
 80002f0:	400a      	ands	r2, r1
 80002f2:	60da      	str	r2, [r3, #12]
 80002f4:	e019      	b.n	800032a <GPIO_Inıt+0x106>
			}
			else if (pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_Mode_IT_RFT)
 80002f6:	687b      	ldr	r3, [r7, #4]
 80002f8:	795b      	ldrb	r3, [r3, #5]
 80002fa:	2b06      	cmp	r3, #6
 80002fc:	d115      	bne.n	800032a <GPIO_Inıt+0x106>
			{// SET botH FTSR RTSR
				EXTI->RTSR |= (1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNummer);
 80002fe:	4b92      	ldr	r3, [pc, #584]	; (8000548 <GPIO_Inıt+0x324>)
 8000300:	689a      	ldr	r2, [r3, #8]
 8000302:	687b      	ldr	r3, [r7, #4]
 8000304:	791b      	ldrb	r3, [r3, #4]
 8000306:	0019      	movs	r1, r3
 8000308:	2301      	movs	r3, #1
 800030a:	408b      	lsls	r3, r1
 800030c:	0019      	movs	r1, r3
 800030e:	4b8e      	ldr	r3, [pc, #568]	; (8000548 <GPIO_Inıt+0x324>)
 8000310:	430a      	orrs	r2, r1
 8000312:	609a      	str	r2, [r3, #8]
				EXTI->FTSR |= (1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNummer);
 8000314:	4b8c      	ldr	r3, [pc, #560]	; (8000548 <GPIO_Inıt+0x324>)
 8000316:	68da      	ldr	r2, [r3, #12]
 8000318:	687b      	ldr	r3, [r7, #4]
 800031a:	791b      	ldrb	r3, [r3, #4]
 800031c:	0019      	movs	r1, r3
 800031e:	2301      	movs	r3, #1
 8000320:	408b      	lsls	r3, r1
 8000322:	0019      	movs	r1, r3
 8000324:	4b88      	ldr	r3, [pc, #544]	; (8000548 <GPIO_Inıt+0x324>)
 8000326:	430a      	orrs	r2, r1
 8000328:	60da      	str	r2, [r3, #12]
			}
			//EXTİ İNTERRUPT DELİVERY USİNG IMR

			EXTI->IMR |= 1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNummer ;
 800032a:	4b87      	ldr	r3, [pc, #540]	; (8000548 <GPIO_Inıt+0x324>)
 800032c:	681a      	ldr	r2, [r3, #0]
 800032e:	687b      	ldr	r3, [r7, #4]
 8000330:	791b      	ldrb	r3, [r3, #4]
 8000332:	0019      	movs	r1, r3
 8000334:	2301      	movs	r3, #1
 8000336:	408b      	lsls	r3, r1
 8000338:	0019      	movs	r1, r3
 800033a:	4b83      	ldr	r3, [pc, #524]	; (8000548 <GPIO_Inıt+0x324>)
 800033c:	430a      	orrs	r2, r1
 800033e:	601a      	str	r2, [r3, #0]

			//CONFİGURE  GPIO_PORT  SYSCFG_EXTICR

			uint8_t temp1 =pGPIOHandle->GPIO_PinConfig.GPIO_PinNummer/4;
 8000340:	687b      	ldr	r3, [r7, #4]
 8000342:	791a      	ldrb	r2, [r3, #4]
 8000344:	2313      	movs	r3, #19
 8000346:	18fb      	adds	r3, r7, r3
 8000348:	0892      	lsrs	r2, r2, #2
 800034a:	701a      	strb	r2, [r3, #0]
			uint8_t temp2 =pGPIOHandle->GPIO_PinConfig.GPIO_PinNummer%4;
 800034c:	687b      	ldr	r3, [r7, #4]
 800034e:	791a      	ldrb	r2, [r3, #4]
 8000350:	2312      	movs	r3, #18
 8000352:	18fb      	adds	r3, r7, r3
 8000354:	2103      	movs	r1, #3
 8000356:	400a      	ands	r2, r1
 8000358:	701a      	strb	r2, [r3, #0]
			uint8_t portcode = GPIOBASEADRSS_TO_CODE(pGPIOHandle ->pGPIOx);
 800035a:	687b      	ldr	r3, [r7, #4]
 800035c:	681a      	ldr	r2, [r3, #0]
 800035e:	2390      	movs	r3, #144	; 0x90
 8000360:	05db      	lsls	r3, r3, #23
 8000362:	429a      	cmp	r2, r3
 8000364:	d024      	beq.n	80003b0 <GPIO_Inıt+0x18c>
 8000366:	687b      	ldr	r3, [r7, #4]
 8000368:	681b      	ldr	r3, [r3, #0]
 800036a:	4a78      	ldr	r2, [pc, #480]	; (800054c <GPIO_Inıt+0x328>)
 800036c:	4293      	cmp	r3, r2
 800036e:	d01d      	beq.n	80003ac <GPIO_Inıt+0x188>
 8000370:	687b      	ldr	r3, [r7, #4]
 8000372:	681b      	ldr	r3, [r3, #0]
 8000374:	4a76      	ldr	r2, [pc, #472]	; (8000550 <GPIO_Inıt+0x32c>)
 8000376:	4293      	cmp	r3, r2
 8000378:	d016      	beq.n	80003a8 <GPIO_Inıt+0x184>
 800037a:	687b      	ldr	r3, [r7, #4]
 800037c:	681b      	ldr	r3, [r3, #0]
 800037e:	4a75      	ldr	r2, [pc, #468]	; (8000554 <GPIO_Inıt+0x330>)
 8000380:	4293      	cmp	r3, r2
 8000382:	d00f      	beq.n	80003a4 <GPIO_Inıt+0x180>
 8000384:	687b      	ldr	r3, [r7, #4]
 8000386:	681b      	ldr	r3, [r3, #0]
 8000388:	4a73      	ldr	r2, [pc, #460]	; (8000558 <GPIO_Inıt+0x334>)
 800038a:	4293      	cmp	r3, r2
 800038c:	d008      	beq.n	80003a0 <GPIO_Inıt+0x17c>
 800038e:	687b      	ldr	r3, [r7, #4]
 8000390:	681b      	ldr	r3, [r3, #0]
 8000392:	4a72      	ldr	r2, [pc, #456]	; (800055c <GPIO_Inıt+0x338>)
 8000394:	4293      	cmp	r3, r2
 8000396:	d101      	bne.n	800039c <GPIO_Inıt+0x178>
 8000398:	2305      	movs	r3, #5
 800039a:	e00a      	b.n	80003b2 <GPIO_Inıt+0x18e>
 800039c:	2300      	movs	r3, #0
 800039e:	e008      	b.n	80003b2 <GPIO_Inıt+0x18e>
 80003a0:	2304      	movs	r3, #4
 80003a2:	e006      	b.n	80003b2 <GPIO_Inıt+0x18e>
 80003a4:	2303      	movs	r3, #3
 80003a6:	e004      	b.n	80003b2 <GPIO_Inıt+0x18e>
 80003a8:	2302      	movs	r3, #2
 80003aa:	e002      	b.n	80003b2 <GPIO_Inıt+0x18e>
 80003ac:	2301      	movs	r3, #1
 80003ae:	e000      	b.n	80003b2 <GPIO_Inıt+0x18e>
 80003b0:	2300      	movs	r3, #0
 80003b2:	2011      	movs	r0, #17
 80003b4:	183a      	adds	r2, r7, r0
 80003b6:	7013      	strb	r3, [r2, #0]
			SYSCFG_PCLK_EN();
 80003b8:	4b69      	ldr	r3, [pc, #420]	; (8000560 <GPIO_Inıt+0x33c>)
 80003ba:	699a      	ldr	r2, [r3, #24]
 80003bc:	4b68      	ldr	r3, [pc, #416]	; (8000560 <GPIO_Inıt+0x33c>)
 80003be:	2101      	movs	r1, #1
 80003c0:	430a      	orrs	r2, r1
 80003c2:	619a      	str	r2, [r3, #24]
			SYSCONF->EXTICR[temp1] |= portcode << (temp2 * 4);
 80003c4:	4a67      	ldr	r2, [pc, #412]	; (8000564 <GPIO_Inıt+0x340>)
 80003c6:	2413      	movs	r4, #19
 80003c8:	193b      	adds	r3, r7, r4
 80003ca:	781b      	ldrb	r3, [r3, #0]
 80003cc:	3302      	adds	r3, #2
 80003ce:	009b      	lsls	r3, r3, #2
 80003d0:	589a      	ldr	r2, [r3, r2]
 80003d2:	183b      	adds	r3, r7, r0
 80003d4:	7819      	ldrb	r1, [r3, #0]
 80003d6:	2312      	movs	r3, #18
 80003d8:	18fb      	adds	r3, r7, r3
 80003da:	781b      	ldrb	r3, [r3, #0]
 80003dc:	009b      	lsls	r3, r3, #2
 80003de:	4099      	lsls	r1, r3
 80003e0:	000b      	movs	r3, r1
 80003e2:	0018      	movs	r0, r3
 80003e4:	495f      	ldr	r1, [pc, #380]	; (8000564 <GPIO_Inıt+0x340>)
 80003e6:	193b      	adds	r3, r7, r4
 80003e8:	781b      	ldrb	r3, [r3, #0]
 80003ea:	4302      	orrs	r2, r0
 80003ec:	3302      	adds	r3, #2
 80003ee:	009b      	lsls	r3, r3, #2
 80003f0:	505a      	str	r2, [r3, r1]
	}

	temp = 0;
 80003f2:	2300      	movs	r3, #0
 80003f4:	617b      	str	r3, [r7, #20]

	//Configure the Speed
	temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinSpeed <<(2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNummer));
 80003f6:	687b      	ldr	r3, [r7, #4]
 80003f8:	799b      	ldrb	r3, [r3, #6]
 80003fa:	001a      	movs	r2, r3
 80003fc:	687b      	ldr	r3, [r7, #4]
 80003fe:	791b      	ldrb	r3, [r3, #4]
 8000400:	005b      	lsls	r3, r3, #1
 8000402:	409a      	lsls	r2, r3
 8000404:	0013      	movs	r3, r2
 8000406:	617b      	str	r3, [r7, #20]
	pGPIOHandle->pGPIOx->OSPEEDR &= ~( 0x3 << ( 2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNummer));
 8000408:	687b      	ldr	r3, [r7, #4]
 800040a:	681b      	ldr	r3, [r3, #0]
 800040c:	689a      	ldr	r2, [r3, #8]
 800040e:	687b      	ldr	r3, [r7, #4]
 8000410:	791b      	ldrb	r3, [r3, #4]
 8000412:	005b      	lsls	r3, r3, #1
 8000414:	2103      	movs	r1, #3
 8000416:	4099      	lsls	r1, r3
 8000418:	000b      	movs	r3, r1
 800041a:	43db      	mvns	r3, r3
 800041c:	0019      	movs	r1, r3
 800041e:	687b      	ldr	r3, [r7, #4]
 8000420:	681b      	ldr	r3, [r3, #0]
 8000422:	400a      	ands	r2, r1
 8000424:	609a      	str	r2, [r3, #8]
	pGPIOHandle->pGPIOx->OSPEEDR |= temp;
 8000426:	687b      	ldr	r3, [r7, #4]
 8000428:	681b      	ldr	r3, [r3, #0]
 800042a:	6899      	ldr	r1, [r3, #8]
 800042c:	687b      	ldr	r3, [r7, #4]
 800042e:	681b      	ldr	r3, [r3, #0]
 8000430:	697a      	ldr	r2, [r7, #20]
 8000432:	430a      	orrs	r2, r1
 8000434:	609a      	str	r2, [r3, #8]
	temp = 0;
 8000436:	2300      	movs	r3, #0
 8000438:	617b      	str	r3, [r7, #20]
	//Configure the Pull Up Pull Down
	temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinPuPdControl <<(2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNummer));
 800043a:	687b      	ldr	r3, [r7, #4]
 800043c:	79db      	ldrb	r3, [r3, #7]
 800043e:	001a      	movs	r2, r3
 8000440:	687b      	ldr	r3, [r7, #4]
 8000442:	791b      	ldrb	r3, [r3, #4]
 8000444:	005b      	lsls	r3, r3, #1
 8000446:	409a      	lsls	r2, r3
 8000448:	0013      	movs	r3, r2
 800044a:	617b      	str	r3, [r7, #20]
	pGPIOHandle->pGPIOx->PUPDR &= ~( 0x3 << ( 2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNummer));
 800044c:	687b      	ldr	r3, [r7, #4]
 800044e:	681b      	ldr	r3, [r3, #0]
 8000450:	68da      	ldr	r2, [r3, #12]
 8000452:	687b      	ldr	r3, [r7, #4]
 8000454:	791b      	ldrb	r3, [r3, #4]
 8000456:	005b      	lsls	r3, r3, #1
 8000458:	2103      	movs	r1, #3
 800045a:	4099      	lsls	r1, r3
 800045c:	000b      	movs	r3, r1
 800045e:	43db      	mvns	r3, r3
 8000460:	0019      	movs	r1, r3
 8000462:	687b      	ldr	r3, [r7, #4]
 8000464:	681b      	ldr	r3, [r3, #0]
 8000466:	400a      	ands	r2, r1
 8000468:	60da      	str	r2, [r3, #12]
	pGPIOHandle->pGPIOx->PUPDR |= temp;
 800046a:	687b      	ldr	r3, [r7, #4]
 800046c:	681b      	ldr	r3, [r3, #0]
 800046e:	68d9      	ldr	r1, [r3, #12]
 8000470:	687b      	ldr	r3, [r7, #4]
 8000472:	681b      	ldr	r3, [r3, #0]
 8000474:	697a      	ldr	r2, [r7, #20]
 8000476:	430a      	orrs	r2, r1
 8000478:	60da      	str	r2, [r3, #12]
	temp = 0;
 800047a:	2300      	movs	r3, #0
 800047c:	617b      	str	r3, [r7, #20]
	//Configure the optype
	temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinOpType <<(pGPIOHandle->GPIO_PinConfig.GPIO_PinNummer));
 800047e:	687b      	ldr	r3, [r7, #4]
 8000480:	7a1b      	ldrb	r3, [r3, #8]
 8000482:	001a      	movs	r2, r3
 8000484:	687b      	ldr	r3, [r7, #4]
 8000486:	791b      	ldrb	r3, [r3, #4]
 8000488:	409a      	lsls	r2, r3
 800048a:	0013      	movs	r3, r2
 800048c:	617b      	str	r3, [r7, #20]
	pGPIOHandle->pGPIOx->OTYPER &= ~( 0x1 << (pGPIOHandle->GPIO_PinConfig.GPIO_PinNummer));
 800048e:	687b      	ldr	r3, [r7, #4]
 8000490:	681b      	ldr	r3, [r3, #0]
 8000492:	685a      	ldr	r2, [r3, #4]
 8000494:	687b      	ldr	r3, [r7, #4]
 8000496:	791b      	ldrb	r3, [r3, #4]
 8000498:	0019      	movs	r1, r3
 800049a:	2301      	movs	r3, #1
 800049c:	408b      	lsls	r3, r1
 800049e:	43db      	mvns	r3, r3
 80004a0:	0019      	movs	r1, r3
 80004a2:	687b      	ldr	r3, [r7, #4]
 80004a4:	681b      	ldr	r3, [r3, #0]
 80004a6:	400a      	ands	r2, r1
 80004a8:	605a      	str	r2, [r3, #4]
	pGPIOHandle->pGPIOx->OTYPER |= temp;
 80004aa:	687b      	ldr	r3, [r7, #4]
 80004ac:	681b      	ldr	r3, [r3, #0]
 80004ae:	6859      	ldr	r1, [r3, #4]
 80004b0:	687b      	ldr	r3, [r7, #4]
 80004b2:	681b      	ldr	r3, [r3, #0]
 80004b4:	697a      	ldr	r2, [r7, #20]
 80004b6:	430a      	orrs	r2, r1
 80004b8:	605a      	str	r2, [r3, #4]
	temp = 0;
 80004ba:	2300      	movs	r3, #0
 80004bc:	617b      	str	r3, [r7, #20]
	//Configure the ALT functionality
	if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_Mode_ALTFEN )
 80004be:	687b      	ldr	r3, [r7, #4]
 80004c0:	795b      	ldrb	r3, [r3, #5]
 80004c2:	2b02      	cmp	r3, #2
 80004c4:	d13b      	bne.n	800053e <GPIO_Inıt+0x31a>
	{
		//configure the alt function registers.
		uint8_t temp1 , temp2 ;
		temp1= pGPIOHandle->GPIO_PinConfig.GPIO_PinNummer / 8 ;
 80004c6:	687b      	ldr	r3, [r7, #4]
 80004c8:	791a      	ldrb	r2, [r3, #4]
 80004ca:	2410      	movs	r4, #16
 80004cc:	193b      	adds	r3, r7, r4
 80004ce:	08d2      	lsrs	r2, r2, #3
 80004d0:	701a      	strb	r2, [r3, #0]
		temp2= pGPIOHandle->GPIO_PinConfig.GPIO_PinNummer % 8 ;
 80004d2:	687b      	ldr	r3, [r7, #4]
 80004d4:	791a      	ldrb	r2, [r3, #4]
 80004d6:	250f      	movs	r5, #15
 80004d8:	197b      	adds	r3, r7, r5
 80004da:	2107      	movs	r1, #7
 80004dc:	400a      	ands	r2, r1
 80004de:	701a      	strb	r2, [r3, #0]
		pGPIOHandle->pGPIOx->AFR[temp1] &= ~(0xF << ( 4 * temp2 ) ); //clean
 80004e0:	687b      	ldr	r3, [r7, #4]
 80004e2:	681b      	ldr	r3, [r3, #0]
 80004e4:	193a      	adds	r2, r7, r4
 80004e6:	7812      	ldrb	r2, [r2, #0]
 80004e8:	3208      	adds	r2, #8
 80004ea:	0092      	lsls	r2, r2, #2
 80004ec:	58d1      	ldr	r1, [r2, r3]
 80004ee:	197b      	adds	r3, r7, r5
 80004f0:	781b      	ldrb	r3, [r3, #0]
 80004f2:	009b      	lsls	r3, r3, #2
 80004f4:	220f      	movs	r2, #15
 80004f6:	409a      	lsls	r2, r3
 80004f8:	0013      	movs	r3, r2
 80004fa:	43db      	mvns	r3, r3
 80004fc:	0018      	movs	r0, r3
 80004fe:	687b      	ldr	r3, [r7, #4]
 8000500:	681b      	ldr	r3, [r3, #0]
 8000502:	193a      	adds	r2, r7, r4
 8000504:	7812      	ldrb	r2, [r2, #0]
 8000506:	4001      	ands	r1, r0
 8000508:	3208      	adds	r2, #8
 800050a:	0092      	lsls	r2, r2, #2
 800050c:	50d1      	str	r1, [r2, r3]
		pGPIOHandle->pGPIOx->AFR[temp1] |= (pGPIOHandle-> GPIO_PinConfig.GPIO_PinAltFunMode << (4 * temp2));
 800050e:	687b      	ldr	r3, [r7, #4]
 8000510:	681b      	ldr	r3, [r3, #0]
 8000512:	193a      	adds	r2, r7, r4
 8000514:	7812      	ldrb	r2, [r2, #0]
 8000516:	3208      	adds	r2, #8
 8000518:	0092      	lsls	r2, r2, #2
 800051a:	58d1      	ldr	r1, [r2, r3]
 800051c:	687b      	ldr	r3, [r7, #4]
 800051e:	7a5b      	ldrb	r3, [r3, #9]
 8000520:	001a      	movs	r2, r3
 8000522:	197b      	adds	r3, r7, r5
 8000524:	781b      	ldrb	r3, [r3, #0]
 8000526:	009b      	lsls	r3, r3, #2
 8000528:	409a      	lsls	r2, r3
 800052a:	0013      	movs	r3, r2
 800052c:	0018      	movs	r0, r3
 800052e:	687b      	ldr	r3, [r7, #4]
 8000530:	681b      	ldr	r3, [r3, #0]
 8000532:	193a      	adds	r2, r7, r4
 8000534:	7812      	ldrb	r2, [r2, #0]
 8000536:	4301      	orrs	r1, r0
 8000538:	3208      	adds	r2, #8
 800053a:	0092      	lsls	r2, r2, #2
 800053c:	50d1      	str	r1, [r2, r3]
*
* @Note              -

*/

}
 800053e:	46c0      	nop			; (mov r8, r8)
 8000540:	46bd      	mov	sp, r7
 8000542:	b006      	add	sp, #24
 8000544:	bdb0      	pop	{r4, r5, r7, pc}
 8000546:	46c0      	nop			; (mov r8, r8)
 8000548:	40010400 	.word	0x40010400
 800054c:	48000400 	.word	0x48000400
 8000550:	48000800 	.word	0x48000800
 8000554:	48000c00 	.word	0x48000c00
 8000558:	48001000 	.word	0x48001000
 800055c:	48001400 	.word	0x48001400
 8000560:	40021000 	.word	0x40021000
 8000564:	40010000 	.word	0x40010000

08000568 <GPIO_ToggleOutputPin>:
 *
 * @Note              -

 */
void GPIO_ToggleOutputPin(GPIO_REGDEF_t *pGPIOx,uint8_t PinNumber)
{
 8000568:	b580      	push	{r7, lr}
 800056a:	b082      	sub	sp, #8
 800056c:	af00      	add	r7, sp, #0
 800056e:	6078      	str	r0, [r7, #4]
 8000570:	000a      	movs	r2, r1
 8000572:	1cfb      	adds	r3, r7, #3
 8000574:	701a      	strb	r2, [r3, #0]
	pGPIOx->ODR ^=(1 <<PinNumber);
 8000576:	687b      	ldr	r3, [r7, #4]
 8000578:	695b      	ldr	r3, [r3, #20]
 800057a:	1cfa      	adds	r2, r7, #3
 800057c:	7812      	ldrb	r2, [r2, #0]
 800057e:	2101      	movs	r1, #1
 8000580:	4091      	lsls	r1, r2
 8000582:	000a      	movs	r2, r1
 8000584:	405a      	eors	r2, r3
 8000586:	687b      	ldr	r3, [r7, #4]
 8000588:	615a      	str	r2, [r3, #20]
}
 800058a:	46c0      	nop			; (mov r8, r8)
 800058c:	46bd      	mov	sp, r7
 800058e:	b002      	add	sp, #8
 8000590:	bd80      	pop	{r7, pc}
	...

08000594 <GPIO_IRQITConfig>:
 *
 * @Note              -

 */
void GPIO_IRQITConfig(uint8_t IRQNumber , uint8_t enordı)
{
 8000594:	b580      	push	{r7, lr}
 8000596:	b082      	sub	sp, #8
 8000598:	af00      	add	r7, sp, #0
 800059a:	0002      	movs	r2, r0
 800059c:	1dfb      	adds	r3, r7, #7
 800059e:	701a      	strb	r2, [r3, #0]
 80005a0:	1dbb      	adds	r3, r7, #6
 80005a2:	1c0a      	adds	r2, r1, #0
 80005a4:	701a      	strb	r2, [r3, #0]
	if (enordı==ENABLE)
 80005a6:	1dbb      	adds	r3, r7, #6
 80005a8:	781b      	ldrb	r3, [r3, #0]
 80005aa:	2b01      	cmp	r3, #1
 80005ac:	d10b      	bne.n	80005c6 <GPIO_IRQITConfig+0x32>
	{									/*cortex m0 has ony one ISER and normally we need to positions split to ISER */
		*NVIC_ISER |= (1 << IRQNumber);//program ISER0 register
 80005ae:	4b0d      	ldr	r3, [pc, #52]	; (80005e4 <GPIO_IRQITConfig+0x50>)
 80005b0:	681a      	ldr	r2, [r3, #0]
 80005b2:	1dfb      	adds	r3, r7, #7
 80005b4:	781b      	ldrb	r3, [r3, #0]
 80005b6:	2101      	movs	r1, #1
 80005b8:	4099      	lsls	r1, r3
 80005ba:	000b      	movs	r3, r1
 80005bc:	0019      	movs	r1, r3
 80005be:	4b09      	ldr	r3, [pc, #36]	; (80005e4 <GPIO_IRQITConfig+0x50>)
 80005c0:	430a      	orrs	r2, r1
 80005c2:	601a      	str	r2, [r3, #0]
	}
	else {
		*NVIC_ICER   |= (1 << IRQNumber);//program ICER0 register
	}

}
 80005c4:	e00a      	b.n	80005dc <GPIO_IRQITConfig+0x48>
		*NVIC_ICER   |= (1 << IRQNumber);//program ICER0 register
 80005c6:	4b08      	ldr	r3, [pc, #32]	; (80005e8 <GPIO_IRQITConfig+0x54>)
 80005c8:	681a      	ldr	r2, [r3, #0]
 80005ca:	1dfb      	adds	r3, r7, #7
 80005cc:	781b      	ldrb	r3, [r3, #0]
 80005ce:	2101      	movs	r1, #1
 80005d0:	4099      	lsls	r1, r3
 80005d2:	000b      	movs	r3, r1
 80005d4:	0019      	movs	r1, r3
 80005d6:	4b04      	ldr	r3, [pc, #16]	; (80005e8 <GPIO_IRQITConfig+0x54>)
 80005d8:	430a      	orrs	r2, r1
 80005da:	601a      	str	r2, [r3, #0]
}
 80005dc:	46c0      	nop			; (mov r8, r8)
 80005de:	46bd      	mov	sp, r7
 80005e0:	b002      	add	sp, #8
 80005e2:	bd80      	pop	{r7, pc}
 80005e4:	e000e100 	.word	0xe000e100
 80005e8:	e000e180 	.word	0xe000e180

080005ec <GPIO_IRQPrıorityConfig>:
 *
 * @Note              -

 */
void GPIO_IRQPrıorityConfig(uint8_t IRQNumber , uint32_t IRQPriority )
{
 80005ec:	b590      	push	{r4, r7, lr}
 80005ee:	b085      	sub	sp, #20
 80005f0:	af00      	add	r7, sp, #0
 80005f2:	0002      	movs	r2, r0
 80005f4:	6039      	str	r1, [r7, #0]
 80005f6:	1dfb      	adds	r3, r7, #7
 80005f8:	701a      	strb	r2, [r3, #0]
  uint8_t iprx = IRQNumber/4 ;
 80005fa:	200f      	movs	r0, #15
 80005fc:	183b      	adds	r3, r7, r0
 80005fe:	1dfa      	adds	r2, r7, #7
 8000600:	7812      	ldrb	r2, [r2, #0]
 8000602:	0892      	lsrs	r2, r2, #2
 8000604:	701a      	strb	r2, [r3, #0]
  uint8_t iprx_section = IRQNumber%4 ;// the ipr register
 8000606:	240e      	movs	r4, #14
 8000608:	193b      	adds	r3, r7, r4
 800060a:	1dfa      	adds	r2, r7, #7
 800060c:	7812      	ldrb	r2, [r2, #0]
 800060e:	2103      	movs	r1, #3
 8000610:	400a      	ands	r2, r1
 8000612:	701a      	strb	r2, [r3, #0]
  uint8_t Schift_amo = (iprx_section*8)+(8-NO_PR_BİTS);
 8000614:	193b      	adds	r3, r7, r4
 8000616:	781b      	ldrb	r3, [r3, #0]
 8000618:	00db      	lsls	r3, r3, #3
 800061a:	b2da      	uxtb	r2, r3
 800061c:	240d      	movs	r4, #13
 800061e:	193b      	adds	r3, r7, r4
 8000620:	3203      	adds	r2, #3
 8000622:	701a      	strb	r2, [r3, #0]
  *(NVIC_PR_BASEADRSS+iprx) |= (IRQPriority << Schift_amo);
 8000624:	183b      	adds	r3, r7, r0
 8000626:	781b      	ldrb	r3, [r3, #0]
 8000628:	009b      	lsls	r3, r3, #2
 800062a:	4a0a      	ldr	r2, [pc, #40]	; (8000654 <GPIO_IRQPrıorityConfig+0x68>)
 800062c:	4694      	mov	ip, r2
 800062e:	4463      	add	r3, ip
 8000630:	6819      	ldr	r1, [r3, #0]
 8000632:	193b      	adds	r3, r7, r4
 8000634:	781b      	ldrb	r3, [r3, #0]
 8000636:	683a      	ldr	r2, [r7, #0]
 8000638:	409a      	lsls	r2, r3
 800063a:	183b      	adds	r3, r7, r0
 800063c:	781b      	ldrb	r3, [r3, #0]
 800063e:	009b      	lsls	r3, r3, #2
 8000640:	4804      	ldr	r0, [pc, #16]	; (8000654 <GPIO_IRQPrıorityConfig+0x68>)
 8000642:	4684      	mov	ip, r0
 8000644:	4463      	add	r3, ip
 8000646:	430a      	orrs	r2, r1
 8000648:	601a      	str	r2, [r3, #0]
}
 800064a:	46c0      	nop			; (mov r8, r8)
 800064c:	46bd      	mov	sp, r7
 800064e:	b005      	add	sp, #20
 8000650:	bd90      	pop	{r4, r7, pc}
 8000652:	46c0      	nop			; (mov r8, r8)
 8000654:	e000e400 	.word	0xe000e400

08000658 <GPIO_IRQHandling>:
 *
 * @Note              -

 */
void GPIO_IRQHandling(uint8_t PinNumber)
{
 8000658:	b580      	push	{r7, lr}
 800065a:	b082      	sub	sp, #8
 800065c:	af00      	add	r7, sp, #0
 800065e:	0002      	movs	r2, r0
 8000660:	1dfb      	adds	r3, r7, #7
 8000662:	701a      	strb	r2, [r3, #0]
	if (EXTI->PR & (1<<PinNumber))//clear the exti PR register the pin number
 8000664:	4b0b      	ldr	r3, [pc, #44]	; (8000694 <GPIO_IRQHandling+0x3c>)
 8000666:	695b      	ldr	r3, [r3, #20]
 8000668:	1dfa      	adds	r2, r7, #7
 800066a:	7812      	ldrb	r2, [r2, #0]
 800066c:	2101      	movs	r1, #1
 800066e:	4091      	lsls	r1, r2
 8000670:	000a      	movs	r2, r1
 8000672:	4013      	ands	r3, r2
 8000674:	d00a      	beq.n	800068c <GPIO_IRQHandling+0x34>
	{
		EXTI->PR |= (1<<PinNumber);
 8000676:	4b07      	ldr	r3, [pc, #28]	; (8000694 <GPIO_IRQHandling+0x3c>)
 8000678:	695a      	ldr	r2, [r3, #20]
 800067a:	1dfb      	adds	r3, r7, #7
 800067c:	781b      	ldrb	r3, [r3, #0]
 800067e:	2101      	movs	r1, #1
 8000680:	4099      	lsls	r1, r3
 8000682:	000b      	movs	r3, r1
 8000684:	0019      	movs	r1, r3
 8000686:	4b03      	ldr	r3, [pc, #12]	; (8000694 <GPIO_IRQHandling+0x3c>)
 8000688:	430a      	orrs	r2, r1
 800068a:	615a      	str	r2, [r3, #20]
	}
}
 800068c:	46c0      	nop			; (mov r8, r8)
 800068e:	46bd      	mov	sp, r7
 8000690:	b002      	add	sp, #8
 8000692:	bd80      	pop	{r7, pc}
 8000694:	40010400 	.word	0x40010400

08000698 <main>:
void delay(uint8_t Value)
{
	for(uint32_t i = 0 ; i < Value ; i ++);
}
int main(void)
{
 8000698:	b590      	push	{r4, r7, lr}
 800069a:	b087      	sub	sp, #28
 800069c:	af00      	add	r7, sp, #0
	GPIO_Handle_t GpioLed , GpioBtn;

	GpioLed.pGPIOx = GPIOA;
 800069e:	240c      	movs	r4, #12
 80006a0:	193b      	adds	r3, r7, r4
 80006a2:	2290      	movs	r2, #144	; 0x90
 80006a4:	05d2      	lsls	r2, r2, #23
 80006a6:	601a      	str	r2, [r3, #0]
	GpioLed.GPIO_PinConfig.GPIO_PinNummer = GPIO_PIN_NO_5;
 80006a8:	193b      	adds	r3, r7, r4
 80006aa:	2205      	movs	r2, #5
 80006ac:	711a      	strb	r2, [r3, #4]
	GpioLed.GPIO_PinConfig.GPIO_PinMode = GPIO_Mode_OUT  ;
 80006ae:	193b      	adds	r3, r7, r4
 80006b0:	2201      	movs	r2, #1
 80006b2:	715a      	strb	r2, [r3, #5]
	GpioLed.GPIO_PinConfig.GPIO_PinSpeed = GPIO_OP_SPEED_FAST   ;
 80006b4:	193b      	adds	r3, r7, r4
 80006b6:	2202      	movs	r2, #2
 80006b8:	719a      	strb	r2, [r3, #6]
	GpioLed.GPIO_PinConfig.GPIO_PinOpType = GPIO_OP_TYPR_PP;
 80006ba:	193b      	adds	r3, r7, r4
 80006bc:	2200      	movs	r2, #0
 80006be:	721a      	strb	r2, [r3, #8]
	GpioLed.GPIO_PinConfig.GPIO_PinPuPdControl = GPIO_NO_PUPD;
 80006c0:	193b      	adds	r3, r7, r4
 80006c2:	2200      	movs	r2, #0
 80006c4:	71da      	strb	r2, [r3, #7]

	//GpioLed.GPIO_PinConfig.GPIO_PinOpType = GPIO_OP_TYPR_OD; //OPEN DRAIN MODE
	//GpioLed.GPIO_PinConfig.GPIO_PinPuPdControl = GPIO_PU; //PULL-UP RESİSTOR
	GpioBtn.pGPIOx = GPIOC;
 80006c6:	003b      	movs	r3, r7
 80006c8:	4a18      	ldr	r2, [pc, #96]	; (800072c <main+0x94>)
 80006ca:	601a      	str	r2, [r3, #0]
	GpioBtn.GPIO_PinConfig.GPIO_PinNummer = GPIO_PIN_NO_13;
 80006cc:	003b      	movs	r3, r7
 80006ce:	220d      	movs	r2, #13
 80006d0:	711a      	strb	r2, [r3, #4]
	GpioBtn.GPIO_PinConfig.GPIO_PinMode = GPIO_Mode_IT_FT;
 80006d2:	003b      	movs	r3, r7
 80006d4:	2204      	movs	r2, #4
 80006d6:	715a      	strb	r2, [r3, #5]
	GpioBtn.GPIO_PinConfig.GPIO_PinSpeed = GPIO_OP_SPEED_FAST;
 80006d8:	003b      	movs	r3, r7
 80006da:	2202      	movs	r2, #2
 80006dc:	719a      	strb	r2, [r3, #6]
	GpioBtn.GPIO_PinConfig.GPIO_PinPuPdControl = GPIO_NO_PUPD;
 80006de:	003b      	movs	r3, r7
 80006e0:	2200      	movs	r2, #0
 80006e2:	71da      	strb	r2, [r3, #7]

	GPIO_IRQITConfig(IRQ_No_EXTI4_15,ENABLE);
 80006e4:	2101      	movs	r1, #1
 80006e6:	2007      	movs	r0, #7
 80006e8:	f7ff ff54 	bl	8000594 <GPIO_IRQITConfig>
	GPIO_IRQPrıorityConfig(IRQ_No_EXTI4_15,15);
 80006ec:	210f      	movs	r1, #15
 80006ee:	2007      	movs	r0, #7
 80006f0:	f7ff ff7c 	bl	80005ec <GPIO_IRQPrıorityConfig>
	//GPIO_IRQPrıorityConfig(IRQ_No_EXTI4_15,15);

	GPIO_periperalclockControl(GPIOA,ENABLE);
 80006f4:	2390      	movs	r3, #144	; 0x90
 80006f6:	05db      	lsls	r3, r3, #23
 80006f8:	2101      	movs	r1, #1
 80006fa:	0018      	movs	r0, r3
 80006fc:	f7ff fd04 	bl	8000108 <GPIO_periperalclockControl>
	GPIO_periperalclockControl(GPIOC,ENABLE);
 8000700:	4b0a      	ldr	r3, [pc, #40]	; (800072c <main+0x94>)
 8000702:	2101      	movs	r1, #1
 8000704:	0018      	movs	r0, r3
 8000706:	f7ff fcff 	bl	8000108 <GPIO_periperalclockControl>
	GPIO_Inıt(&GpioLed);
 800070a:	193b      	adds	r3, r7, r4
 800070c:	0018      	movs	r0, r3
 800070e:	f7ff fd89 	bl	8000224 <GPIO_Inıt>
	GPIO_Inıt(&GpioBtn);
 8000712:	003b      	movs	r3, r7
 8000714:	0018      	movs	r0, r3
 8000716:	f7ff fd85 	bl	8000224 <GPIO_Inıt>
	GpioLed.pGPIOx = GPIOA;
 800071a:	193b      	adds	r3, r7, r4
 800071c:	2290      	movs	r2, #144	; 0x90
 800071e:	05d2      	lsls	r2, r2, #23
 8000720:	601a      	str	r2, [r3, #0]
	GpioBtn.pGPIOx = GPIOC;
 8000722:	003b      	movs	r3, r7
 8000724:	4a01      	ldr	r2, [pc, #4]	; (800072c <main+0x94>)
 8000726:	601a      	str	r2, [r3, #0]

	while(1)
 8000728:	e7fe      	b.n	8000728 <main+0x90>
 800072a:	46c0      	nop			; (mov r8, r8)
 800072c:	48000800 	.word	0x48000800

08000730 <EXTI4_15_IRQHandler>:


		}
}

void EXTI4_15_IRQHandler(void){
 8000730:	b580      	push	{r7, lr}
 8000732:	af00      	add	r7, sp, #0

	GPIO_IRQHandling(GPIO_PIN_NO_13 );
 8000734:	200d      	movs	r0, #13
 8000736:	f7ff ff8f 	bl	8000658 <GPIO_IRQHandling>
	GPIO_ToggleOutputPin(GPIOA, GPIO_PIN_NO_5);
 800073a:	2390      	movs	r3, #144	; 0x90
 800073c:	05db      	lsls	r3, r3, #23
 800073e:	2105      	movs	r1, #5
 8000740:	0018      	movs	r0, r3
 8000742:	f7ff ff11 	bl	8000568 <GPIO_ToggleOutputPin>

}
 8000746:	46c0      	nop			; (mov r8, r8)
 8000748:	46bd      	mov	sp, r7
 800074a:	bd80      	pop	{r7, pc}

0800074c <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 800074c:	480d      	ldr	r0, [pc, #52]	; (8000784 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 800074e:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 8000750:	e000      	b.n	8000754 <Reset_Handler+0x8>
 8000752:	bf00      	nop

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8000754:	480c      	ldr	r0, [pc, #48]	; (8000788 <LoopForever+0x6>)
  ldr r1, =_edata
 8000756:	490d      	ldr	r1, [pc, #52]	; (800078c <LoopForever+0xa>)
  ldr r2, =_sidata
 8000758:	4a0d      	ldr	r2, [pc, #52]	; (8000790 <LoopForever+0xe>)
  movs r3, #0
 800075a:	2300      	movs	r3, #0
  b LoopCopyDataInit
 800075c:	e002      	b.n	8000764 <LoopCopyDataInit>

0800075e <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 800075e:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000760:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8000762:	3304      	adds	r3, #4

08000764 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000764:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8000766:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000768:	d3f9      	bcc.n	800075e <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 800076a:	4a0a      	ldr	r2, [pc, #40]	; (8000794 <LoopForever+0x12>)
  ldr r4, =_ebss
 800076c:	4c0a      	ldr	r4, [pc, #40]	; (8000798 <LoopForever+0x16>)
  movs r3, #0
 800076e:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000770:	e001      	b.n	8000776 <LoopFillZerobss>

08000772 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8000772:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000774:	3204      	adds	r2, #4

08000776 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8000776:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000778:	d3fb      	bcc.n	8000772 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 800077a:	f000 f811 	bl	80007a0 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 800077e:	f7ff ff8b 	bl	8000698 <main>

08000782 <LoopForever>:

LoopForever:
  b LoopForever
 8000782:	e7fe      	b.n	8000782 <LoopForever>
  ldr   r0, =_estack
 8000784:	20004000 	.word	0x20004000
  ldr r0, =_sdata
 8000788:	20000000 	.word	0x20000000
  ldr r1, =_edata
 800078c:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 8000790:	08000808 	.word	0x08000808
  ldr r2, =_sbss
 8000794:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 8000798:	2000001c 	.word	0x2000001c

0800079c <ADC_COMP_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 800079c:	e7fe      	b.n	800079c <ADC_COMP_IRQHandler>
	...

080007a0 <__libc_init_array>:
 80007a0:	b570      	push	{r4, r5, r6, lr}
 80007a2:	2600      	movs	r6, #0
 80007a4:	4c0c      	ldr	r4, [pc, #48]	; (80007d8 <__libc_init_array+0x38>)
 80007a6:	4d0d      	ldr	r5, [pc, #52]	; (80007dc <__libc_init_array+0x3c>)
 80007a8:	1b64      	subs	r4, r4, r5
 80007aa:	10a4      	asrs	r4, r4, #2
 80007ac:	42a6      	cmp	r6, r4
 80007ae:	d109      	bne.n	80007c4 <__libc_init_array+0x24>
 80007b0:	2600      	movs	r6, #0
 80007b2:	f000 f819 	bl	80007e8 <_init>
 80007b6:	4c0a      	ldr	r4, [pc, #40]	; (80007e0 <__libc_init_array+0x40>)
 80007b8:	4d0a      	ldr	r5, [pc, #40]	; (80007e4 <__libc_init_array+0x44>)
 80007ba:	1b64      	subs	r4, r4, r5
 80007bc:	10a4      	asrs	r4, r4, #2
 80007be:	42a6      	cmp	r6, r4
 80007c0:	d105      	bne.n	80007ce <__libc_init_array+0x2e>
 80007c2:	bd70      	pop	{r4, r5, r6, pc}
 80007c4:	00b3      	lsls	r3, r6, #2
 80007c6:	58eb      	ldr	r3, [r5, r3]
 80007c8:	4798      	blx	r3
 80007ca:	3601      	adds	r6, #1
 80007cc:	e7ee      	b.n	80007ac <__libc_init_array+0xc>
 80007ce:	00b3      	lsls	r3, r6, #2
 80007d0:	58eb      	ldr	r3, [r5, r3]
 80007d2:	4798      	blx	r3
 80007d4:	3601      	adds	r6, #1
 80007d6:	e7f2      	b.n	80007be <__libc_init_array+0x1e>
 80007d8:	08000800 	.word	0x08000800
 80007dc:	08000800 	.word	0x08000800
 80007e0:	08000804 	.word	0x08000804
 80007e4:	08000800 	.word	0x08000800

080007e8 <_init>:
 80007e8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80007ea:	46c0      	nop			; (mov r8, r8)
 80007ec:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80007ee:	bc08      	pop	{r3}
 80007f0:	469e      	mov	lr, r3
 80007f2:	4770      	bx	lr

080007f4 <_fini>:
 80007f4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80007f6:	46c0      	nop			; (mov r8, r8)
 80007f8:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80007fa:	bc08      	pop	{r3}
 80007fc:	469e      	mov	lr, r3
 80007fe:	4770      	bx	lr
